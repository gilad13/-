הצפנת pyramid
בהצפנה זו מקבלים טקסט ומפתח שאורכו קטן מ10 וחייב למלא את ספרותיו כך שכל הספרות מ - 1 עד אורך המפתח, יהיו בתוכו. לדוגמא: 3124, 263415.
לאחר הכנסת המפתח הופכים את ספרותיו בצורת מראה.
 לאחר מכן מסדרים את ההודעה במערך דו מימדי בצורה הבאה:
לדוגמא: ההודעה: ?hello world how are you ואורך המפתח הוא 4 לדוגמא המפתח: 3124 ולכן המפתח ההפוך הוא: 4213

4
3
2
1






h




l
e


(space)
o
l
l
r
o
w






d




o
h


a
(space)
w
y
(space)
e
r






o




?
u


לאחר סידור ההודעה בטבלה, ניצור את ההודעה המוצפנת על ידי קריאת הטבלה לפי טורים לפי הסדר שלהם במפתח ההפוך. כלומר בדוגמא שנתתי מקודם נקרא את הטור הרביעי ולאחר מכן השני, הראשון, ואז השלישי, כך שכל תא ריק יקרא כ$.

פענוח pyramid
להודעה המוצפנת ולמפתח שהפונקציה מקבלת יש הגבלות ודרישות כמו בהצפנה.
אנחנו מסדרים את ההודעה בטבלה לפי טורים, לאחר מכן יוצרים טבלה מעודכנת בה הטורים מסודרים לפי הסדר במפתח.
על מנת להגיע להודעה המפוענחת אנו קוראים את הטבלה המעודכנת לפי שורות ולאחר מכן מסירים את הסימן $ מההודעה.


הצפנת frequency
בהצפנה זו מקבלים טקסט ומפתח שהוא מספר שלם בין 0 ל26
ההצפנה מחשבת את אורך הצליל עבור כל תו בצורה הבאה:
אות מ- 13 הראשונות בABC = חצי שניה
אות מ - 13 האחרונות בABC = שניה
תו מיוחד - רבע שנייה
	בין כל תו תהיה הפסקה באורך 0.1 שניה
  	לאחר מכן מחשבים את ערך התדר לפי כך:
עבור אות מ - ABC:
(((מיקום האות ב ABC + ערך המפתח) מודולו 13)*100*ערך המפתח) + 400
עבור תו מיוחד:
((מיקום התו ב string של התווים המיוחדים) * 50) + 2000
	מעבירים את ערכי הסאונד ואורך הסאונד של כל תו לקובץ שמע בעזרת
         התיקיות pydub ,pydub.generators שבהן השתמשנו ב AudioSegment Sine

פענוח frequency
בפענוח זה מקבלים את קובץ הסאונד שהוצפן ומפתח לפי הערכים המותרים בהצפנה.
ממירים את קובץ השמע למערך בו ממיונים ערכי הרץ לאורכי הסאונד. את ההמרה הזו מבצעים בעזרת התיקיות האלו (בנוסף לאלו שהשתמשנו בהן קודם בהצפנה):
scipy.io  - wavfile
scipy.signal - stft
numpy
	תיקיות אלו מאפשרות עבודה נוחה עם קובץ סאונד.
	לאחר המיון אנו מחשבים את המיקום בABC או בתווים המיוחדים של התו.
	על מנת לחשב את המיקום נחלק את החישוב לכמה קבוצות, נעשה את זה כך:
עבור תו שאורכו חצי שניה או שניה: %13((100*ערך המפתח)/(400 - ערך ההרץ))
עבור תו שאורכו חצי שניה - הערך שיצא לאחר החישוב, זהו מיקומו בABC
עבור תו שאורכו שניה - הערך שיצא לאחר החישוב ועוד 13 וזהו מיקומו בABC
		לאחר מציאת מיקום האות בABC  מזיזים אותה אחורה לפי מספר
ערך המפתח על ידי פענוח קיסר.

עבור תו שאורכו רבע שניה: 50 / (2000 - ערך ההרץ), וזה הוא מיקומו בstring של התווים המיוחדים.
